diff --git a/src/keccak_circuit/param.rs b/home/a/scroll/zkevm-circuits/zkevm-circuits/src/keccak_circuit/param.rs
index 09220ae..53c41a7 100644
--- a/src/keccak_circuit/param.rs
+++ b/home/a/scroll/zkevm-circuits/zkevm-circuits/src/keccak_circuit/param.rs
@@ -11,14 +11,12 @@ pub(crate) const KECCAK_WIDTH: usize = 5 * 5;
 pub(crate) const KECCAK_WIDTH_IN_BITS: usize = KECCAK_WIDTH * NUM_BITS_PER_WORD;
 pub(crate) const NUM_ROUNDS: usize = 24;
 pub(crate) const NUM_WORDS_TO_ABSORB: usize = 17;
-pub(crate) const NUM_BYTES_TO_ABSORB: usize = NUM_WORDS_TO_ABSORB * NUM_BYTES_PER_WORD;
 pub(crate) const NUM_WORDS_TO_SQUEEZE: usize = 4;
-pub(crate) const NUM_BYTES_TO_SQUEEZE: usize = NUM_WORDS_TO_SQUEEZE * NUM_BYTES_PER_WORD;
 pub(crate) const ABSORB_WIDTH_PER_ROW: usize = NUM_BITS_PER_WORD;
 pub(crate) const ABSORB_WIDTH_PER_ROW_BYTES: usize = ABSORB_WIDTH_PER_ROW / NUM_BITS_PER_BYTE;
 pub(crate) const RATE: usize = NUM_WORDS_TO_ABSORB * NUM_BYTES_PER_WORD;
 pub(crate) const RATE_IN_BITS: usize = RATE * NUM_BITS_PER_BYTE;
-// pub(crate) const THETA_C_WIDTH: usize = 5 * NUM_BITS_PER_WORD;
+pub(crate) const THETA_C_WIDTH: usize = 5 * NUM_BITS_PER_WORD;
 pub(crate) const RHO_MATRIX: [[usize; 5]; 5] = [
     [0, 36, 3, 41, 18],
     [1, 44, 10, 45, 2],
@@ -54,7 +52,7 @@ pub(crate) const ROUND_CST: [u64; NUM_ROUNDS + 1] = [
     0x0000000000000000, // absorb round
 ];
 // Bit positions that have a non-zero value in `IOTA_ROUND_CST`.
-// pub(crate) const ROUND_CST_BIT_POS: [usize; 7] = [0, 1, 3, 7, 15, 31, 63];
+pub(crate) const ROUND_CST_BIT_POS: [usize; 7] = [0, 1, 3, 7, 15, 31, 63];
 
 // The number of bits used in the sparse word representation per bit
 pub(crate) const BIT_COUNT: usize = 3;
@@ -64,4 +62,4 @@ pub(crate) const BIT_SIZE: usize = 2usize.pow(BIT_COUNT as u32);
 // `a ^ ((~b) & c)` is calculated by doing `lookup[3 - 2*a + b - c]`
 pub(crate) const CHI_BASE_LOOKUP_TABLE: [u8; 5] = [0, 1, 1, 0, 0];
 // `a ^ ((~b) & c) ^ d` is calculated by doing `lookup[5 - 2*a - b + c - 2*d]`
-// pub(crate) const CHI_EXT_LOOKUP_TABLE: [u8; 7] = [0, 0, 1, 1, 0, 0, 1];
+pub(crate) const CHI_EXT_LOOKUP_TABLE: [u8; 7] = [0, 0, 1, 1, 0, 0, 1];
